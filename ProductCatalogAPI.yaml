openapi: 3.0.3
info:
  title: ProductCatalog
  description: ProductCatalog
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
tags:
  - name: Tags
    description: Every operation of the Tag resource.
  - name: Products
    description: Every operation of the Product resource.
  - name: Categories
    description: Every operation of the Category resource.
  - name: Aliases
    description: Every operation of the Alias resource.
paths:
  /products:
    get:
      tags:
        - Products
      description: Find all products
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      description: Creates a new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProductDto'
      responses:
        201:
          description: Success on creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Validation errors, like category could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        415:
          description: Media Type not supported for request body
  /products/{productId}:
    get:
      tags:
        - Products
      description: Get a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: The ID of the product to get
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product with that id could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
    put:
      tags:
        - Products
      description: Modify a product.
      parameters:
        - name: productId
          in: path
          description: ID of the product to be deleted
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProductDto'
      responses:
        200:
          description: Success on update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Validation errors, like category could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        415:
          description: Media Type not supported for request body
    delete:
      tags:
        - Products
      description: Delete a product
      parameters:
        - name: productId
          in: path
          description: ID of the product to be deleted
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success on deletion
        400:
          description: Missing productId parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        404:
          description: A product with given ID could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
  /products/search:
    get:
      tags:
        - Products
      description: Search products by model name and aliases
      parameters:
        - name: query
          in: query
          description: Query string to search by
          schema:
            type: string
      responses:
        200:
          description: Success on search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /categories:
    get:
      tags:
        - Categories
      description: Find all categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      description: Creates a new category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDto'
      responses:
        201:
          description: Success on creation
        400:
          description: Parent category does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        415:
          description: Media Type not supported for request body
  /categories/{categoryName}:
    put:
      tags:
        - Categories
      description: Modify a category
      parameters:
        - name: categoryName
          in: path
          description: The category name that will change its parent category
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyParentCategoryDto'
      responses:
        200:
          description: Success on update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Category could not be found or parent category could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        415:
          description: Media Type not supported for request body
    delete:
      tags:
        - Categories
      description: Delete a category
      parameters:
        - name: categoryName
          in: path
          description: Name of the category to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success on deletion
        400:
          description: Missing productId parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
        404:
          description: A product with given ID could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
  /tags:
    get:
      tags:
        - Tags
      description: Collect all tags from available products
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  /alias:
    get:
      tags:
        - Aliases
      description: Find all product aliases
      parameters:
        - name: mappedOnly
          in: query
          description: Flag to filter and bring only aliases mapped to a product
          schema:
            type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alias'
  /alias/{aliasName}:
    put:
      tags:
        - Aliases
      description: Map an alias to a product
      parameters:
        - name: aliasName
          in: path
          description: The name of the alias to map
          required: true
          schema:
            type: string
        - name: productId
          in: query
          description: The product id to mapped this alias to
          schema:
            type: integer
      responses:
        200:
          description: Success on mapping
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alias'
        400:
          description: Validation errors, like product could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
  /alias/search:
    get:
      tags:
        - Aliases
      description: Find a product by alias only and create the alias if a product is not found
      parameters:
        - name: alias
          in: query
          description: Alias to search by
          schema:
            type: string
      responses:
        200:
          description: Product found in search by alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product could not be found in search by alias, this alias is saved for mapping
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alias'

components:
  schemas:
    Tag:
      type: object
      description: A tag for the products in the catalog, used to group the products regardless of category.
      properties:
        id:
          type: string
        description:
          type: string
    Category:
      type: object
      description: A category of products in the catalog.
      properties:
        name:
          type: string
        parentCategory:
          type: string
    Alias:
      type: object
      description: A simple alias for a product representing the different names a product may be known for.
      properties:
        name:
          type: string
        mappedTo:
          type: integer
    Product:
      type: object
      description: A product in the catalog, with its category and tags
      properties:
        id:
          type: integer
        model:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        weight:
          type: number
        type:
          type: string
        marketPrice:
          type: number
        creator:
          type: string
        taggedBy:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        aliases:
          type: array
          items:
            type: string
    ModifyProductDto:
      type: object
      description: A product creation request.
      properties:
        model:
          type: string
        category:
          type: string
        weight:
          type: number
        type:
          type: string
        marketPrice:
          type: number
    MessageError:
        type: object
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
    ModifyParentCategoryDto:
      type: object
      description: A product creation request.
      properties:
        parentCategory:
          type: string
    CreateCategoryDto:
      type: object
      description: A product creation request.
      properties:
        name:
          type: string
        parentCategory:
          type: string
