openapi: 3.0.3
info:
  description: ProductCatalog
  title: ProductCatalog
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - description: Every operation of the Tag resource.
    name: Tags
  - description: Every operation of the Product resource.
    name: Products
  - description: Every operation of the Category resource.
    name: Categories
  - description: Every operation of the Alias resource.
    name: Aliases
paths:
  /products:
    get:
      description: Find all products
      operationId: productsGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: Success
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
    post:
      description: Creates a new product
      operationId: productsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProductDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Success on creation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: "Validation errors, like category could not be found."
        "415":
          description: Media Type not supported for request body
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
  /products/{productId}:
    delete:
      description: Delete a product
      operationId: productsProductIdDELETE
      parameters:
        - description: ID of the product to be deleted
          explode: false
          in: path
          name: productId
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          description: Success on deletion
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: Missing productId parameter
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: A product with given ID could not be found
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
    get:
      description: Get a specific product
      operationId: productsProductIdGET
      parameters:
        - description: The ID of the product to get
          explode: false
          in: path
          name: productId
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: Product with that id could not be found
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
    put:
      description: Modify a product.
      operationId: productsProductIdPUT
      parameters:
        - description: ID of the product to be deleted
          explode: false
          in: path
          name: productId
          required: true
          schema:
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProductDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Success on update
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: "Validation errors, like category could not be found."
        "415":
          description: Media Type not supported for request body
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
  /products/search:
    get:
      description: Search products by model name and aliases
      operationId: productsSearchGET
      parameters:
        - description: Query string to search by
          explode: true
          in: query
          name: query
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: Success on search
      tags:
        - Products
      x-eov-operation-handler: controllers/ProductsController
  /categories:
    get:
      description: Find all categories
      operationId: categoriesGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: Success
      tags:
        - Categories
      x-eov-operation-handler: controllers/CategoriesController
    post:
      description: Creates a new category
      operationId: categoriesPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDto'
      responses:
        "201":
          description: Success on creation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: Parent category does not exist
        "415":
          description: Media Type not supported for request body
      tags:
        - Categories
      x-eov-operation-handler: controllers/CategoriesController
  /categories/{categoryName}:
    delete:
      description: Delete a category
      operationId: categoriesCategoryNameDELETE
      parameters:
        - description: Name of the category to be deleted
          explode: false
          in: path
          name: categoryName
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: Success on deletion
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: Missing productId parameter
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: A product with given ID could not be found
      tags:
        - Categories
      x-eov-operation-handler: controllers/CategoriesController
    put:
      description: Modify a category
      operationId: categoriesCategoryNamePUT
      parameters:
        - description: The category name that will change its parent category
          explode: false
          in: path
          name: categoryName
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyParentCategoryDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Success on update
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: Category could not be found or parent category could not be
            found
        "415":
          description: Media Type not supported for request body
      tags:
        - Categories
      x-eov-operation-handler: controllers/CategoriesController
  /tags:
    get:
      description: Collect all tags from available products
      operationId: tagsGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: Success
      tags:
        - Tags
      x-eov-operation-handler: controllers/TagsController
  /alias:
    get:
      description: Find all product aliases
      operationId: aliasGET
      parameters:
        - description: Flag to filter and bring only aliases mapped to a product
          explode: true
          in: query
          name: mappedOnly
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Alias'
                type: array
          description: Success
      tags:
        - Aliases
      x-eov-operation-id: aliasGET
      x-eov-operation-handler: controllers/AliasesController
  /alias/{aliasName}:
    put:
      description: Map an alias to a product
      operationId: aliasAliasNamePUT
      parameters:
        - description: The name of the alias to map
          explode: false
          in: path
          name: aliasName
          required: true
          schema:
            type: string
          style: simple
        - description: The product id to mapped this alias to
          explode: true
          in: query
          name: productId
          required: false
          schema:
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alias'
          description: Success on mapping
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: "Validation errors, like product could not be found."
      tags:
        - Aliases
      x-eov-operation-handler: controllers/AliasesController
  /alias/search:
    get:
      description: Find a product by alias only and create the alias if a product
        is not found
      operationId: aliasSearchGET
      parameters:
        - description: Alias to search by
          explode: true
          in: query
          name: alias
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Product found in search by alias
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alias'
          description: "Product could not be found in search by alias, this alias\
            \ is saved for mapping"
      tags:
        - Aliases
      x-eov-operation-handler: controllers/AliasesController
components:
  schemas:
    Tag:
      description: "A tag for the products in the catalog, used to group the products regardless of category."
      example:
        description: A display that is capable of using internet services, like Netflix.
        id: SmartTv
      properties:
        id:
          type: string
        description:
          type: string
      type: object
    Category:
      description: A category of products in the catalog.
      example:
        name: TVs
        parentCategory: Electronics
      properties:
        name:
          type: string
        parentCategory:
          type: string
      type: object
    Alias:
      description: A simple alias for a product representing the different names a product may be known for.
      example:
        name: Samsung SmartTv 46" TV
        mappedTo: 1
      properties:
        name:
          type: string
        mappedTo:
          type: integer
      type: object
    Product:
      description: A product in the catalog, with its category and tags
      example:
        taggedBy:
          - Samsung
          - SmartTV
        marketPrice: 300
        creator: creator
        aliases:
          - Samsung HWTK523 Display
          - Samsung SmartTv 46" TV
        weight: 1.6
        model: Samsung 46" TV
        id: 1
        category:
          name: Display
          parentCategory: Electronics
        type: High-End Electronics
      properties:
        id:
          type: integer
        model:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        weight:
          type: number
        type:
          type: string
        marketPrice:
          type: number
        creator:
          type: string
        taggedBy:
          items:
            type: string
          type: array
        aliases:
          items:
            type: string
          type: array
      type: object
    ModifyProductDto:
      description: A product modification request.
      example:
        marketPrice: 129.99
        weight: 5.6
        model: Samsung HD 46" TV
        category: Display
        type: High-End Electronic
      properties:
        model:
          type: string
        category:
          type: string
        weight:
          type: number
        type:
          type: string
        marketPrice:
          type: number
      type: object
    MessageError:
      example:
        code: 400
        message: The provided arguments are incorrect.
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    ModifyParentCategoryDto:
      description: A category modification request.
      example:
        parentCategory: Computers
      properties:
        parentCategory:
          type: string
      type: object
    CreateCategoryDto:
      description: A product creation request.
      example:
        name: Displays
        parentCategory: Electronics
      properties:
        name:
          type: string
        parentCategory:
          type: string
      type: object
